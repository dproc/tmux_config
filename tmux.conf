#remember for tmux all key bindings are in the form of prefix+one char or prefix+prefix+one char
#remove all key bindings to avoid conflict with shell and emacs
unbind-key -a
#change prefix to `
set-option -g prefix `
#imperative key bindings follow from here
#prefix-: enter command-prompt ie interact with tmux client
bind-key : command-prompt
#optional key bindings follow from here
#prefix-C-` direct tmux client to send prefix to tmux server
bind-key C-p send-prefix
#windows key bindings
bind-key n next-window
bind-key p previous-window
bind-key ` last-window
#panes key bindings
#target pane is given in the form of session:windown.pane
bind-key o select-pane -t :.+
#Maximize and restore a pane
#bind-key Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
#bind-key Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
#enable scroll
#setw -g mode-mouse on
#copy-mode key bindings
#bind-key -t emacs-copy C-w copy-pipe 'xclip -in -selection clipboard'
#move x clipboard into tmux paste buffer
bind-key C-y run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
#move tmux copy buffer into x clipboard
bind-key M-w run "tmux save-buffer - | xclip -i"
#the only indispensible kdb is bind prefix-: to command-prompt. press prefix-: to enter command-prompt, then all the other command can be input from the prompt then interpreted by tmux client, so all the other kbd is unnecessary

#########tmux plugins manager and tmux plugins###############
#tpm see ~/.tmux/plugins/
set -g @plugin 'tmux-plugins/tpm'

#List of plugins as follows

#tmux-sensible for sensible configuration of tmux
set -g @plugin 'tmux-plugins/tmux-sensible'

#tmux-resurrect for store restore session configuration layout and running programs see ~/.tmux/resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
#tmux-resurrect config
set -g @resurrect-processes 'ssh telnet'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

#########tmux plugins manager and tmux plugins end###############

#########tmuxintor for create tmux project############
#see ~/.tmuxinator/ and tmuxinator which is a ruby script
#########tmuxintor for create tmux project end########
